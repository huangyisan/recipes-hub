// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: ingredients.proto

package ingredient

import (
	"context"

	"github.com/huangyisan/recipes-hub/app/ingredients/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Ingredient           = __.Ingredient
	IngredientCreateReq  = __.IngredientCreateReq
	IngredientCreateResp = __.IngredientCreateResp
	IngredientDetailReq  = __.IngredientDetailReq
	IngredientDetailResp = __.IngredientDetailResp
	IngredientListReq    = __.IngredientListReq
	IngredientListResp   = __.IngredientListResp

	IngredientZrpcClient interface {
		// 食材详情
		IngredientDetail(ctx context.Context, in *IngredientDetailReq, opts ...grpc.CallOption) (*IngredientDetailResp, error)
		// 食材列表
		IngredientList(ctx context.Context, in *IngredientListReq, opts ...grpc.CallOption) (*IngredientListResp, error)
		// 添加食材
		IngredientCreate(ctx context.Context, in *IngredientCreateReq, opts ...grpc.CallOption) (*IngredientCreateResp, error)
	}

	defaultIngredientZrpcClient struct {
		cli zrpc.Client
	}
)

func NewIngredientZrpcClient(cli zrpc.Client) IngredientZrpcClient {
	return &defaultIngredientZrpcClient{
		cli: cli,
	}
}

// 食材详情
func (m *defaultIngredientZrpcClient) IngredientDetail(ctx context.Context, in *IngredientDetailReq, opts ...grpc.CallOption) (*IngredientDetailResp, error) {
	client := __.NewIngredientClient(m.cli.Conn())
	return client.IngredientDetail(ctx, in, opts...)
}

// 食材列表
func (m *defaultIngredientZrpcClient) IngredientList(ctx context.Context, in *IngredientListReq, opts ...grpc.CallOption) (*IngredientListResp, error) {
	client := __.NewIngredientClient(m.cli.Conn())
	return client.IngredientList(ctx, in, opts...)
}

// 添加食材
func (m *defaultIngredientZrpcClient) IngredientCreate(ctx context.Context, in *IngredientCreateReq, opts ...grpc.CallOption) (*IngredientCreateResp, error) {
	client := __.NewIngredientClient(m.cli.Conn())
	return client.IngredientCreate(ctx, in, opts...)
}
